#!/bin/bash

> band_spinpolar_up.m 
read -p "Please Input the number of bands (from EIGENVAL):" NBANDS
while [ -z "$NBANDS" ]
	do
		read -p "please input the number of K:" NBANDS
	done
while [ $NBANDS -lt 2 ]
	do
		read -p "the number must be more than 1:" NBANDS
	done
num=`cat KPOINTS | grep "\!" | wc -l`
num=$[num/2]
printf "function [Min_bands_up,Max_bands_up]=band_spinpolar_up(Fermi,spin,Emin,Emax)
     EIG_VAL=textread('EIGENVAL','','headerlines',7);
     if spin==0
         spin=spin+1;
     end
     spin=spin+1;%if spin=0 or 1 choose spin_up(non_spin) ; if spin=2 choose spin_down
     kmesh=100;
     Nband=$NBANDS;
     h1=5;
     h2=1.5;
     EIG_VAL1=EIG_VAL;
     rm_K=1:9:size(EIG_VAL,1);
         EIG_VAL1(rm_K,:)=[];
     
     if Emin==0 || Emin<min(EIG_VAL1(:,2))
         Emin=min(EIG_VAL1(:,2));
     end
     if Emax==0 || Emax>max(EIG_VAL1(:,2))
        Emax=max(EIG_VAL1(:,2));
     end
     
     figure('name','spin_up')
     hold on; 
     band_energy_up=zeros($num*kmesh,Nband);  \n
"  > band_spinpolar_up.m 

num_ind=`cat KPOINTS | grep "\!" | sed "s/\!//" | sort -t " " -k4 | uniq | wc -l`
for i in `seq 1 $num_ind`
	do 
		K_P=`cat KPOINTS | grep "\!" | sed "s/\!//" | sort -t " " -k4 | uniq |awk "NR==$i" | cut -d " " -f4`
		K_Px=`cat KPOINTS | grep "\!" | sed "s/\!//" | sort -t " " -k4 | uniq |awk "NR==$i" | cut -d " " -f1`
		K_Py=`cat KPOINTS | grep "\!" | sed "s/\!//" | sort -t " " -k4 | uniq |awk "NR==$i" | cut -d " " -f2`
		K_Pz=`cat KPOINTS | grep "\!" | sed "s/\!//" | sort -t " " -k4 | uniq |awk "NR==$i" | cut -d " " -f3`		
		printf "\t$K_P=find(EIG_VAL(:,1)==$K_Px&EIG_VAL(:,2)==$K_Py&EIG_VAL(:,3)==$K_Pz);\n" >> band_spinpolar_up.m 
	done
K_array=($(cat KPOINTS | grep "\!" | sed "s/\!//" | cut -d " " -f4))
for i in `seq 0 $[$[${#K_array[@]}-2]/2]`
do
	K_n=1
	j=0
	while [ $j -lt $[$i*2] ]
		do
			[ "${K_array[$[$i*2]]}" == "${K_array[$j]}" ] && K_n=$[$K_n+1]
			#echo "$K_n"
			j=$[$j+1]
		done
	printf "
	       %%%% ${K_array[$[$i*2]]}--${K_array[$[2*$i+1]]} 
		  for j=1:Nband 
		      for i=1:kmesh 
		         k=(Nband+1)*(i-1)+2+(j-1)+${K_array[$[2*$i]]}($K_n)-1; 
		         band_energy_up(i+kmesh*$i,j)=EIG_VAL(k,spin);
		      end 
		  end 
		" >> band_spinpolar_up.m 
done

printf "
  %%%%	
   bands_min=0;bands_max=0;
   for i=1:Nband
       if max(band_energy_up(:,i))<Emin 
           max(band_energy_up(:,i))
            bands_min=i;
       end
   end    
   
  if bands_min==0
           bands_min=1;
  else
           bands_min=bands_min+1;
  end
  
   for i=Nband:-1:1
       if min(band_energy_up(:,i))>Emax 
            bands_max=i;
       end
   end
   if bands_max==0
       bands_max=Nband;
   else
       bands_max=bands_max-1;
   end
   Nband=bands_max-bands_min+1;
   band_energy_up=band_energy_up(:,bands_min:bands_max);
   band_energy_up=band_energy_up-Fermi;
   
   %%%%bands
          a = findall(gcf,'type','axes');
          set(a,'XTickLabel',[])
          axis([0 kmesh*$num min(band_energy_up(:,1))-0.5 max(band_energy_up(:,Nband))+0.5])  

" >> band_spinpolar_up.m 

K_array_ind=($(cat KPOINTS | grep "\!" | sed "s/\!//" | uniq |cut -d " " -f4))

for i in  `seq 0 ${#K_array_ind[@]}`
	do
		printf "
       %%%% ${K_array_ind[$i]}
         %line([0,kmesh],[min(EIG_VAL(:,spin)),max(EIG_VAL(:,spin))],'linestyle','--','color','k')
         text((kmesh*$i-h1),min(band_energy_up(:,1))-h2,'\color{red}${K_array_ind[$i]}')
" >> band_spinpolar_up.m 
	done

printf "

      Max_bands_up=ceil(max(band_energy_up(:,Nband)));
      Min_bands_up=floor(min(band_energy_up(:,1)));
   
   
   save bands.mat;
              for j=1:Nband    
                  plot(1:$num*kmesh,band_energy_up(:,j),'.')
              end
          line([1,kmesh*$num],[0,0],'linestyle','--','color','r'); 




end
"  >> band_spinpolar_up.m 





#cat KPOINTS | grep "\!" | cut -d " " -f4 | cut -c 2 | sort|  uniq -c| sed "s/ //g" | cut -c 1
